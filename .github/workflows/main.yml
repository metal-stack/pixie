---
name: Docker Build Action
on:
  pull_request:
    branches:
      - main
  release:
    types:
      - published
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go 1.24
      uses: actions/setup-go@v5
      with:
        go-version: "1.24"
        cache: false

    - name: fake ipxe binary
      run: |
        mkdir -p ipxe/ipxe/bin
        touch ipxe/ipxe/bin/ipxe.bin

    - name: Lint
      uses: golangci/golangci-lint-action@v7
      with:
        args: --timeout=3m

    - name: remove fake ipxe binary
      run: |
        rm -rf ipxe/ipxe

    - name: Make tag
      run: |
        [ "${GITHUB_EVENT_NAME}" == 'pull_request' ] && echo "tag=${GITHUB_HEAD_REF##*/}" >> $GITHUB_ENV || true
        [ "${GITHUB_EVENT_NAME}" == 'release' ] && echo "tag=${GITHUB_REF##*/}" >> $GITHUB_ENV || true
        [ "${GITHUB_EVENT_NAME}" == 'push' ] && echo "tag=latest" >> $GITHUB_ENV || true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        sbom: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.tag }}
